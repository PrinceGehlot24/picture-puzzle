{"version":3,"sources":["components/PuzzleTile.js","components/PuzzleEmptyTile.js","components/Dialog.js","components/PuzzleOneBoard.js","components/PuzzleTwoBoard.js","components/PuzzleThreeBoard.js","components/PuzzleFourBoard.js","components/PuzzleFiveBoard.js","components/PuzzleBoard.js","App.js","reportWebVitals.js","index.js"],"names":["PuzzleTile","_ref","setIsOpen","moveCount","setMoveCount","handleRestartClick","isStarted","data","setIsStarted","images","setImages","dragItem","dragOverItem","dragStart","drop","e","copyListItems","_toConsumableArray","dragItemContent","current","initialListItems","initialListItem","splice","console","log","JSON","stringify","_jsx","className","children","map","image","index","cls","id","onDragStart","onDragOver","preventDefault","onDragEnd","draggable","PuzzleEmptyTile","isPlayerWin","setIsPlayerWin","dragEnter","copyItems","dragOverItemContent","Object","values","onDragEnter","AlertDialog","isOpen","level","setLevel","handleLevel","Dialog","open","onClose","_jsxs","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","PuzzleOneBoard","data1","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","handleShuffle","changes","shuffle","handleClear","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","useRef","position","arra1","temp","ctr","length","Math","floor","random","_Fragment","Typography","variant","gutterBottom","size","color","PuzzleTwoBoard","data2","handleStartClick","PuzzleThreeBoard","data3","PuzzleFourBoard","data4","PuzzleFiveBoard","data5","PuzzleBoard","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"8QAwCeA,MArCf,SAAmBC,GAA8I,IAA5IC,EAASD,EAATC,UAAUC,EAASF,EAATE,UAA8BC,GAAFH,EAAlBI,mBAAgCJ,EAAZG,cAAcE,EAASL,EAATK,UAAyBC,GAAFN,EAAZO,aAAkBP,EAAJM,MAAME,EAAMR,EAANQ,OAAQC,EAAST,EAATS,UAAUC,EAAQV,EAARU,SAAUC,EAAYX,EAAZW,aAAcC,EAASZ,EAATY,UAC1IC,EAAO,SAACC,GAEZ,IAAMC,EAAaC,YAAOR,GACpBS,EAAkBF,EAAc,GAAGL,EAASQ,SAC5CC,EAAgBH,YAAOV,EAAK,IAC5Bc,EAAeJ,YAAOV,EAAK,IACiB,SAAjDS,EAAc,GAAGJ,EAAaO,SAAc,KAAgBH,EAAc,GAAGM,OAAOX,EAASQ,QAAQ,GAC7E,KAAxBP,EAAaO,SAAmE,SAAjDH,EAAc,GAAGJ,EAAaO,SAAc,KAC1EH,EAAc,GAAGM,OAAO,EAAE,EAAEJ,IAAoBF,EAAc,GAAGM,OAAOX,EAASQ,QAAQ,EAAEC,EAAiB,KAAOhB,EAAaD,EAAU,GAC3IS,EAAaO,SAA4D,SAAjDH,EAAc,GAAGJ,EAAaO,SAAc,KACjEH,EAAc,GAAGM,OAAOV,EAAaO,QAAQ,EAAED,IAAoBF,EAAc,GAAGM,OAAOX,EAASQ,QAAQ,EAAEC,EAAiB,KAAOhB,EAAaD,EAAU,GACjKQ,EAASQ,QAAU,KACnBP,EAAaO,QAAU,KACvBT,EAAUM,GACTO,QAAQC,IAAI,YACXC,KAAKC,UAAUV,EAAc,MAAQS,KAAKC,UAAUL,IAAqBnB,GAAU,EACvF,EAEF,OACEyB,cAAA,OAAKC,UAAU,aAAYC,SAClBvB,EAAWG,EAAO,IAAMA,EAAO,GAAGqB,KAAI,SAACC,EAAMC,GAAK,OAEnDL,cAAA,OAAKC,UAAWG,EAAME,IAAKC,GAAIH,EAAMG,GACrCC,YAAa,SAACpB,GAAC,OAAKF,EAAUE,EAAGiB,EAAM,EAEvCI,WAAY,SAACrB,GAAC,OAAGA,EAAEsB,gBAAgB,EACnCC,UAAWxB,EACXyB,UAAuB,SAAZR,EAAMG,IAL6BF,EAMxC,IACJvB,EAAO,IAAMA,EAAO,GAAGqB,KAAI,SAACC,EAAMC,GAAK,OACvCL,cAAA,OAAKC,UAAWG,EAAME,IAAKC,GAAIH,EAAMG,IAASF,EACxC,KAGlB,ECJaQ,MA9Bf,SAAwBvC,GAAoL,IAAjLC,EAASD,EAATC,UAAWC,EAASF,EAATE,UAAyDG,GAA7BL,EAAlBI,mBAA8BJ,EAAXwC,YAA2BxC,EAAdyC,eAAwBzC,EAATK,WAAyBF,GAAFH,EAAZO,aAA0BP,EAAZG,cAAcK,EAAMR,EAANQ,OAAOF,EAAIN,EAAJM,KAAMG,EAAST,EAATS,UAAUC,EAAQV,EAARU,SAAUC,EAAYX,EAAZW,aAAcC,EAASZ,EAATY,UAAU8B,EAAS1C,EAAT0C,UACvL7B,EAAO,SAACC,GACZ,IAAM6B,EAAS3B,YAAOR,EAAO,IACvBY,EAAeJ,YAAOV,EAAK,IAC3BW,EAAkB0B,EAAUjC,EAASQ,SACrC0B,EAAsBD,EAAUhC,EAAaO,SACnDyB,EAAUtB,OAAOX,EAASQ,QAAQ,EAAE0B,GACpCD,EAAUtB,OAAOV,EAAaO,QAAQ,EAAED,GACxCP,EAASQ,QAAU,KACnBP,EAAaO,QAAU,KACvBT,EAAUoC,OAAOC,OAAO,CAAC,EAAKtC,EAAO,GAAI,EAAKmC,KAC9CxC,EAAaD,EAAU,GACrBsB,KAAKC,UAAUkB,KAAenB,KAAKC,UAAUL,IAAoBnB,GAAU,EAC/E,EACA,OACEyB,cAAA,OAAKC,UAAU,YAAWC,SACvBvB,GAAaG,EAAO,IAAMA,EAAO,GAAGqB,KAAI,SAACC,EAAMC,GAAK,OAC/CL,cAAA,OAAKC,UAAWG,EAAME,IAAKC,GAAIH,EAAMG,GACrCc,YAAa,SAACjC,GAAC,OAAK4B,EAAU5B,EAAGiB,EAAM,EACvCI,WAAY,SAACrB,GAAC,OAAKA,EAAEsB,gBAAgB,EACrCF,YAAa,SAACpB,GAAC,OAAKF,EAAUE,EAAGiB,EAAM,EACvCM,UAAWxB,EACXyB,UAAuB,SAAZR,EAAMG,IAL6BF,EAMxC,KAKlB,E,8DCuCeiB,MA/Df,SAAoBhD,GAAoF,IAAjFiD,EAAMjD,EAANiD,OAAQ7C,EAAkBJ,EAAlBI,mBAA+BF,GAAFF,EAATC,UAAoBD,EAATE,WAAWgD,EAAKlD,EAALkD,MAAMC,EAAQnD,EAARmD,SAAUC,EAAWpD,EAAXoD,YAMvF,OACE1B,cAAA,OAAAE,SACa,IAAVsB,EAAcxB,cAAC2B,IAAM,CACpBC,KAAML,EACNM,QAASnD,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0BwB,SAE3C4B,eAAA,OAAK7B,UAAU,cAAaC,SAAA,CAC1BF,cAAC+B,IAAW,CAAC9B,UAAU,UAAUM,GAAG,qBAAoBL,SACrD,eAEHF,cAACgC,IAAa,CAAA9B,SACZ4B,eAACG,IAAiB,CAAChC,UAAU,UAAUM,GAAG,2BAA0BL,SAAA,CAAC,4BACzC1B,EAAU,gBAGxCsD,eAACI,IAAa,CAAAhC,SAAA,CACZF,cAACmC,IAAM,CAAClC,UAAU,MAAMmC,QAAS1D,EAAmBwB,SAAE,cAGtDF,cAACmC,IAAM,CAAClC,UAAU,MAAMmC,QAASV,EAAaW,WAAS,EAAAnC,SAAC,uBAM9DF,cAAC2B,IAAM,CACLC,KAAML,EACNM,QAASnD,EACT,kBAAgB,qBAChB,mBAAiB,2BAA0BwB,SAE3C4B,eAAA,OAAK7B,UAAU,cAAaC,SAAA,CAC1BF,cAAC+B,IAAW,CAAC9B,UAAU,UAAUM,GAAG,qBAAoBL,SACrD,gDAEHF,cAACgC,IAAa,CAAA9B,SACZ4B,eAACG,IAAiB,CAAChC,UAAU,UAAUM,GAAG,2BAA0BL,SAAA,CAAC,4BACzC1B,EAAU,gBAGxCsD,eAACI,IAAa,CAAAhC,SAAA,CACZF,cAACmC,IAAM,CAAClC,UAAU,MAAMmC,QAAS1D,EAAmBwB,SAAE,cAGtDF,cAACmC,IAAM,CAAClC,UAAU,MAAMmC,QAAS,kBAAIX,EAAS,EAAE,EAAEY,WAAS,EAAAnC,SAAC,uBASxE,ECmEeoC,MA/Hf,SAAuBhE,GAAwB,IAAtBkD,EAAKlD,EAALkD,MAAOE,EAAWpD,EAAXoD,YAGxBa,EAAQ,CAAC,CAAC,CAACjC,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,UAC7J,CAAC,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,WAEpJiC,EAA4BC,mBAASF,GAAMG,EAAAC,YAAAH,EAAA,GAApC1D,EAAM4D,EAAA,GAAE3D,EAAS2D,EAAA,GACxBE,EAAkCH,oBAAS,GAAMI,EAAAF,YAAAC,EAAA,GAA1CjE,EAASkE,EAAA,GAAEhE,EAAYgE,EAAA,GAExBC,EAAgB,WACpB,IAAMC,EAAUC,EAAO1D,YAAKR,EAAO,KACnCC,EAAUoC,OAAOC,OAAO,CAAC,EAAI2B,EAAS,EAAKjE,EAAO,KACpD,EAEMmE,EAAc,WAClBlE,EAAUwD,EACZ,EAQM7D,EAAqB,WACzBG,GAAa,GACbkC,GAAe,GACfkC,IACA1E,GAAU,EACZ,EAEA2E,EAAkCT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAtC1E,EAAS2E,EAAA,GAAE1E,EAAY0E,EAAA,GAC9BC,EAAsCX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAA9CtC,EAAWuC,EAAA,GAAEtC,EAAcsC,EAAA,GAClCC,EAA4Bb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAApC/B,EAAMgC,EAAA,GAAEhF,EAASgF,EAAA,GAElBvE,EAAWwE,mBACXvE,EAAeuE,mBAEftE,EAAY,SAACE,EAAGqE,GAClBzE,EAASQ,QAAUiE,EACnB7D,QAAQC,IAAIb,EAASQ,QAAS,WAElC,EAEMwB,EAAY,SAAC5B,EAAGqE,GAClBxE,EAAaO,QAAUiE,CAE3B,EAGMT,EAAU,SAACU,GAIf,IAHA,IACEC,EACAtD,EAFEuD,EAAMF,EAAMG,OAGTD,EAAM,GACXvD,EAAQyD,KAAKC,MAAMD,KAAKE,SAAWJ,GAEnCD,EAAOD,IADPE,GAEAF,EAAME,GAAOF,EAAMrD,GACnBqD,EAAMrD,GAASsD,EAEjB,OAAOD,CACT,EAwBA,OACE5B,eAAAmC,WAAA,CAAA/D,SAAA,CACE4B,eAAA,OAAK7B,UAAU,cAAaC,SAAA,CACpBF,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAACkE,IAAU,CAAC3D,GAAG,QAAQN,UAAU,eAAekE,QAAQ,KAAKC,cAAY,EAAAlE,SAAC,qBAI5E4B,eAAA,OAAK7B,UAAU,gBAAeC,SAAA,CAC1BvB,EAAqCmD,eAAA,SAAA5B,SAAA,CAAO,UAAQ1B,KAAxCwB,cAAA,SAAAE,SAAO,cACpBN,QAAQC,IAAI0B,EAAS,iBAIhCO,eAAA,OAAK7B,UAAU,0BAAyBC,SAAA,CACpCF,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAAC3B,EAAU,CAAC4E,YAAaA,EAAaH,cAAeA,EAAetE,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAClJD,KAAM2D,EAAOzD,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAEjFyB,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAACa,EAAe,CAACrC,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC7FD,KAAM2D,EAAOzD,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAE5EgD,GAAUvB,cAACsB,EAAW,CAACE,MAAOA,EAAOE,YAAaA,EAAaH,OAAQA,EAAQhD,UAAWA,EAAWC,UAAWA,EAAWE,mBAAoBA,OAE1JsB,cAAA,OAAKC,UAAU,cAAaC,SACxB4B,eAAA,OAAK7B,UAAU,UAASC,SAAA,CACjBvB,EAEAqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,QAAQlC,QAAS,kBAAM1D,GAAoB,EAACwB,SAAC,UADvGF,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAAS,kBAnG1FvD,GAAa,GACbiE,SACArE,EAAa,EAiGqG,EAACyB,SAAC,WAEtGvB,GAAaqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAASV,EAAYxB,SAAC,gBAKzH,EC3BeqE,MAlGf,SAAuBjG,GAAkC,IAAhCkD,EAAKlD,EAALkD,MAAiBE,GAAFpD,EAARmD,SAAqBnD,EAAXoD,aAChC8C,EAAQ,CAAC,CAAC,CAAClE,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,UACjN,CAAC,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,WAExMiC,EAA4BC,mBAAS+B,GAAM9B,EAAAC,YAAAH,EAAA,GAApC1D,EAAM4D,EAAA,GAAE3D,EAAS2D,EAAA,GACxBE,EAAkCH,oBAAS,GAAMI,EAAAF,YAAAC,EAAA,GAA1CjE,EAASkE,EAAA,GAAEhE,EAAYgE,EAAA,GAE9BK,EAAkCT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAtC1E,EAAS2E,EAAA,GAAE1E,EAAY0E,EAAA,GAC9BC,EAAsCX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAA9CtC,EAAWuC,EAAA,GAAEtC,EAAcsC,EAAA,GAClCC,EAA4Bb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAApC/B,EAAMgC,EAAA,GAAEhF,EAASgF,EAAA,GAElBvE,EAAWwE,mBACXvE,EAAeuE,mBAEftE,EAAY,SAACE,EAAGqE,GAClBzE,EAASQ,QAAUiE,CACvB,EAEMzC,EAAY,SAAC5B,EAAGqE,GAClBxE,EAAaO,QAAUiE,CAC3B,EAWMgB,EAAmB,WACvB5F,GAAa,GAVO,WACpB,IAAMkE,EAAUC,EAAO1D,YAAKR,EAAO,KACnCC,EAAUoC,OAAOC,OAAO,CAAC,EAAI2B,EAAS,EAAKjE,EAAO,KACpD,CAQEgE,GACArE,EAAa,EACf,EAEMC,EAAqB,WACzBG,GAAa,GACbkC,GAAe,GAXfhC,EAAUyF,GAaVjG,GAAU,EACZ,EAEMyE,EAAU,SAACU,GAIf,IAHA,IACEC,EACAtD,EAFEuD,EAAMF,EAAMG,OAGTD,EAAM,GACXvD,EAAQyD,KAAKC,MAAMD,KAAKE,SAAWJ,GAEnCD,EAAOD,IADPE,GAEAF,EAAME,GAAOF,EAAMrD,GACnBqD,EAAMrD,GAASsD,EAEjB,OAAOD,CACT,EACA,OACE5B,eAAAmC,WAAA,CAAA/D,SAAA,CACE4B,eAAA,OAAK7B,UAAU,cAAaC,SAAA,CACpBF,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAACkE,IAAU,CAAC3D,GAAG,QAAQN,UAAU,eAAekE,QAAQ,KAAKC,cAAY,EAAAlE,SAAC,qBAI5E4B,eAAA,OAAK7B,UAAU,gBAAeC,SAAA,CAC1BvB,EAAqCmD,eAAA,SAAA5B,SAAA,CAAO,UAAQ1B,KAAxCwB,cAAA,SAAAE,SAAO,cACpBN,QAAQC,IAAI0B,EAAS,iBAIhCO,eAAA,OAAK7B,UAAU,0BAAyBC,SAAA,CACpCF,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAAC3B,EAAU,CAACG,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC1FD,KAAM4F,EAAO1F,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAEjFyB,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAACa,EAAe,CAACrC,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC7FD,KAAM4F,EAAO1F,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAElFgD,GAAUvB,cAACsB,EAAW,CAACE,MAAOA,EAAOE,YAAaA,EAAaH,OAAQA,EAAQhD,UAAWA,EAAWC,UAAWA,EAAWE,mBAAoBA,OAEpJsB,cAAA,OAAKC,UAAU,cAAaC,SAC5B4B,eAAA,OAAK7B,UAAU,UAASC,SAAA,CACbvB,EAEAqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,QAAQlC,QAAS,kBAAM1D,GAAoB,EAACwB,SAAC,UADvGF,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAAS,kBAAMqC,GAAkB,EAACvE,SAAC,WAEtGvB,GAAaqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAASV,EAAYxB,SAAC,gBAKzH,ECCewE,MAjGf,SAAyBpG,GAAwB,IAAtBkD,EAAKlD,EAALkD,MAAOE,EAAWpD,EAAXoD,YACxBiD,EAAQ,CAAC,CAAC,CAACrE,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,UAC1O,CAAC,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,WAElOiC,EAA4BC,mBAASkC,GAAMjC,EAAAC,YAAAH,EAAA,GAApC1D,EAAM4D,EAAA,GAAE3D,EAAS2D,EAAA,GACxBE,EAAkCH,oBAAS,GAAMI,EAAAF,YAAAC,EAAA,GAA1CjE,EAASkE,EAAA,GAAEhE,EAAYgE,EAAA,GAC9BK,EAAkCT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAtC1E,EAAS2E,EAAA,GAAE1E,EAAY0E,EAAA,GAC9BC,EAAsCX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAA9CtC,EAAWuC,EAAA,GAAEtC,EAAcsC,EAAA,GAClCC,EAA4Bb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAApC/B,EAAMgC,EAAA,GAAEhF,EAASgF,EAAA,GAElBvE,EAAWwE,mBACXvE,EAAeuE,mBAEftE,EAAY,SAACE,EAAGqE,GAClBzE,EAASQ,QAAUiE,CACvB,EAEMzC,EAAY,SAAC5B,EAAGqE,GAClBxE,EAAaO,QAAUiE,CAC3B,EAWMgB,EAAmB,WACvB5F,GAAa,GAVO,WACpB,IAAMkE,EAAUC,EAAO1D,YAAKR,EAAO,KACnCC,EAAUoC,OAAOC,OAAO,CAAC,EAAI2B,EAAS,EAAKjE,EAAO,KACpD,CAQEgE,GACArE,EAAa,EACf,EAEMC,EAAqB,WACzBG,GAAa,GACbkC,GAAe,GAXfhC,EAAU4F,GAaVpG,GAAU,EACZ,EAEMyE,EAAU,SAACU,GAIf,IAHA,IACEC,EACAtD,EAFEuD,EAAMF,EAAMG,OAGTD,EAAM,GACXvD,EAAQyD,KAAKC,MAAMD,KAAKE,SAAWJ,GAEnCD,EAAOD,IADPE,GAEAF,EAAME,GAAOF,EAAMrD,GACnBqD,EAAMrD,GAASsD,EAEjB,OAAOD,CACT,EACA,OACE5B,eAAAmC,WAAA,CAAA/D,SAAA,CACE4B,eAAA,OAAK7B,UAAU,cAAaC,SAAA,CACpBF,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAACkE,IAAU,CAAC3D,GAAG,QAAQN,UAAU,eAAekE,QAAQ,KAAKC,cAAY,EAAAlE,SAAC,qBAI5E4B,eAAA,OAAK7B,UAAU,gBAAeC,SAAA,CAC1BvB,EAAqCmD,eAAA,SAAA5B,SAAA,CAAO,UAAQ1B,KAAxCwB,cAAA,SAAAE,SAAO,cACpBN,QAAQC,IAAI0B,EAAS,iBAIhCO,eAAA,OAAK7B,UAAU,0BAAyBC,SAAA,CACpCF,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAAC3B,EAAU,CAACG,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC1FD,KAAM+F,EAAO7F,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAEjFyB,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAACa,EAAe,CAACrC,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC7FD,KAAM+F,EAAO7F,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAElFgD,GAAUvB,cAACsB,EAAW,CAACE,MAAOA,EAAOE,YAAaA,EAAaH,OAAQA,EAAQhD,UAAWA,EAAWC,UAAWA,EAAWE,mBAAoBA,OAEpJsB,cAAA,OAAKC,UAAU,cAAaC,SACxB4B,eAAA,OAAK7B,UAAU,UAASC,SAAA,CACjBvB,EAEAqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,QAAQlC,QAAS,kBAAM1D,GAAoB,EAACwB,SAAC,UADvGF,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAAS,kBAAMqC,GAAkB,EAACvE,SAAC,WAEtGvB,GAAaqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAASV,EAAYxB,SAAC,gBAKzH,ECCe0E,MAhGf,SAAwBtG,GAAgC,IAA9BkD,EAAKlD,EAALkD,MAAeE,GAADpD,EAARmD,SAAoBnD,EAAXoD,aAC/BmD,EAAQ,CAAC,CAAC,CAACvE,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,WAC9Z,CAAC,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,WAExZiC,EAA4BC,mBAASoC,GAAMnC,EAAAC,YAAAH,EAAA,GAApC1D,EAAM4D,EAAA,GAAE3D,EAAS2D,EAAA,GACxBE,EAAkCH,oBAAS,GAAMI,EAAAF,YAAAC,EAAA,GAA1CjE,EAASkE,EAAA,GAAEhE,EAAYgE,EAAA,GAC9BK,EAAkCT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAtC1E,EAAS2E,EAAA,GAAE1E,EAAY0E,EAAA,GAC9BC,EAAsCX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAA9CtC,EAAWuC,EAAA,GAAEtC,EAAcsC,EAAA,GAClCC,EAA4Bb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAApC/B,EAAMgC,EAAA,GAAEhF,EAASgF,EAAA,GAElBvE,EAAWwE,mBACXvE,EAAeuE,mBAEftE,EAAY,SAACE,EAAGqE,GAClBzE,EAASQ,QAAUiE,CACvB,EAEMzC,EAAY,SAAC5B,EAAGqE,GAClBxE,EAAaO,QAAUiE,CAC3B,EAWMgB,EAAmB,WACvB5F,GAAa,GAVO,WACpB,IAAMkE,EAAUC,EAAO1D,YAAKR,EAAO,KACnCC,EAAUoC,OAAOC,OAAO,CAAC,EAAI2B,EAAS,EAAKjE,EAAO,KACpD,CAQEgE,GACArE,EAAa,EACf,EAEMC,EAAqB,WACzBG,GAAa,GACbkC,GAAe,GAXfhC,EAAU8F,GAaVtG,GAAU,EACZ,EAEMyE,EAAU,SAACU,GAIf,IAHA,IACEC,EACAtD,EAFEuD,EAAMF,EAAMG,OAGTD,EAAM,GACXvD,EAAQyD,KAAKC,MAAMD,KAAKE,SAAWJ,GAEnCD,EAAOD,IADPE,GAEAF,EAAME,GAAOF,EAAMrD,GACnBqD,EAAMrD,GAASsD,EAEjB,OAAOD,CACT,EACA,OACE5B,eAAAmC,WAAA,CAAA/D,SAAA,CACE4B,eAAA,OAAK7B,UAAU,cAAaC,SAAA,CACpBF,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAACkE,IAAU,CAAC3D,GAAG,QAAQN,UAAU,eAAekE,QAAQ,KAAKC,cAAY,EAAAlE,SAAC,qBAI5EF,cAAA,OAAKC,UAAU,gBAAeC,SAC1BvB,EAAqCmD,eAAA,SAAA5B,SAAA,CAAO,UAAQ1B,KAAxCwB,cAAA,SAAAE,SAAO,mBAI/B4B,eAAA,OAAK7B,UAAU,0BAAyBC,SAAA,CACpCF,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAAC3B,EAAU,CAACG,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC1FD,KAAMiG,EAAO/F,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAEjFyB,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAACa,EAAe,CAACrC,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC7FD,KAAMiG,EAAO/F,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAElFgD,GAAUvB,cAACsB,EAAW,CAACE,MAAOA,EAAOE,YAAaA,EAAaH,OAAQA,EAAQhD,UAAWA,EAAWC,UAAWA,EAAWE,mBAAoBA,OAEpJsB,cAAA,OAAKC,UAAU,cAAaC,SACxB4B,eAAA,OAAK7B,UAAU,UAASC,SAAA,CACjBvB,EAEAqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,QAAQlC,QAAS,kBAAM1D,GAAoB,EAACwB,SAAC,UADvGF,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAAS,kBAAMqC,GAAkB,EAACvE,SAAC,WAEtGvB,GAAaqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAASV,EAAYxB,SAAC,gBAKzH,ECUe4E,MAxGf,SAAwBxG,GAAgC,IAA9BkD,EAAKlD,EAALkD,MAAMC,EAAQnD,EAARmD,SAASC,EAAWpD,EAAXoD,YAC/BqD,EAAQ,CAAC,CAAC,CAACzE,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SACpH,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SAAS,CAACD,IAAI,OAAQC,GAAG,SACpH,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UACxH,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UACxH,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,UAAU,CAACD,IAAI,OAAQC,GAAG,WACzH,CAAC,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SACzH,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SACzH,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SACzH,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SACzH,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,SAAS,CAACD,IAAI,QAASC,GAAG,WAE3IiC,EAA4BC,mBAASsC,GAAMrC,EAAAC,YAAAH,EAAA,GAApC1D,EAAM4D,EAAA,GAAE3D,EAAS2D,EAAA,GACxBE,EAAkCH,oBAAS,GAAMI,EAAAF,YAAAC,EAAA,GAA1CjE,EAASkE,EAAA,GAAEhE,EAAYgE,EAAA,GAC9BK,EAAkCT,mBAAS,GAAEU,EAAAR,YAAAO,EAAA,GAAtC1E,EAAS2E,EAAA,GAAE1E,EAAY0E,EAAA,GAC9BC,EAAsCX,oBAAS,GAAMY,EAAAV,YAAAS,EAAA,GAA9CtC,EAAWuC,EAAA,GAAEtC,EAAcsC,EAAA,GAClCC,EAA4Bb,oBAAS,GAAMc,EAAAZ,YAAAW,EAAA,GAApC/B,EAAMgC,EAAA,GAAEhF,EAASgF,EAAA,GAElBvE,EAAWwE,mBACXvE,EAAeuE,mBAEftE,EAAY,SAACE,EAAGqE,GAClBzE,EAASQ,QAAUiE,CACvB,EAEMzC,EAAY,SAAC5B,EAAGqE,GAClBxE,EAAaO,QAAUiE,CAC3B,EAWMgB,EAAmB,WACvB5F,GAAa,GAVO,WACpB,IAAMkE,EAAUC,EAAO1D,YAAKR,EAAO,KACnCC,EAAUoC,OAAOC,OAAO,CAAC,EAAI2B,EAAS,EAAKjE,EAAO,KACpD,CAQEgE,GACArE,EAAa,EACf,EAEMC,EAAqB,WACzBG,GAAa,GACbkC,GAAe,GAXfhC,EAAUgG,GAaVxG,GAAU,EACZ,EAEMyE,EAAU,SAACU,GAIf,IAHA,IACEC,EACAtD,EAFEuD,EAAMF,EAAMG,OAGTD,EAAM,GACXvD,EAAQyD,KAAKC,MAAMD,KAAKE,SAAWJ,GAEnCD,EAAOD,IADPE,GAEAF,EAAME,GAAOF,EAAMrD,GACnBqD,EAAMrD,GAASsD,EAEjB,OAAOD,CACT,EACA,OACE5B,eAAAmC,WAAA,CAAA/D,SAAA,CACE4B,eAAA,OAAK7B,UAAU,cAAaC,SAAA,CACpBF,cAAA,OAAKC,UAAU,gBAAeC,SAC5BF,cAACkE,IAAU,CAAC3D,GAAG,QAAQN,UAAU,eAAekE,QAAQ,KAAKC,cAAY,EAAAlE,SAAC,qBAI5EF,cAAA,OAAKC,UAAU,gBAAeC,SAC1BvB,EAAqCmD,eAAA,SAAA5B,SAAA,CAAO,UAAQ1B,KAAxCwB,cAAA,SAAAE,SAAO,mBAI/B4B,eAAA,OAAK7B,UAAU,0BAAyBC,SAAA,CACpCF,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAAC3B,EAAU,CAACG,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC1FD,KAAMmG,EAAOjG,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAEjFyB,cAAA,OAAKC,UAAU,UAASC,SAClBF,cAACa,EAAe,CAACrC,UAAWA,EAAWC,aAAcA,EAAcE,UAAWA,EAAWE,aAAcA,EAC7FD,KAAMmG,EAAOjG,OAAQA,EAAQC,UAAWA,EAAWC,SAAUA,EAAUC,aAAcA,EACrFC,UAAWA,EAAW8B,UAAWA,EAAWF,YAAaA,EAAaC,eAAgBA,EACtFrC,mBAAoBA,EAAoB6C,OAAQA,EAAQhD,UAAWA,MAElFgD,GAAUvB,cAACsB,EAAW,CAACE,MAAOA,EAAOC,SAAUA,EAAU/C,mBAAoBA,EAAoBgD,YAAaA,EAAaH,OAAQA,EAAQhD,UAAWA,EAAWC,UAAWA,OAEjLwB,cAAA,OAAKC,UAAU,cAAaC,SACxB4B,eAAA,OAAK7B,UAAU,UAASC,SAAA,CACjBvB,EAEAqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,QAAQlC,QAAS,kBAAM1D,GAAoB,EAACwB,SAAC,UADvGF,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAAS,kBAAMqC,GAAkB,EAACvE,SAAC,WAEtGvB,GAAaqB,cAACmC,IAAM,CAAC5B,GAAG,MAAMN,UAAU,YAAYoE,KAAK,QAAQC,MAAM,UAAUlC,QAAS,kBAAIX,EAAS,EAAE,EAACvB,SAAC,gBAK7H,ECvDe8E,MA7Cf,WAEI,IAAAxC,EAA2BC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA/BhB,EAAKkB,EAAA,GAAGjB,EAAQiB,EAAA,GAEjBhB,EAAa,WACjBD,EAASD,EAAQ,EACnB,EAiBF,OACIxB,cAAA,OAAKC,UAAU,aAAYC,SACvB,WACF,OAAQsB,GACN,KAAK,EACH,OAAOxB,cAACsC,EAAc,CAACd,MAAOA,EAAOC,SAAUA,EAAUC,YAAaA,IACxE,KAAK,EACH,OAAO1B,cAACuE,EAAc,CAAC/C,MAAOA,EAAOC,SAAUA,EAAUC,YAAaA,IACxE,KAAK,EACH,OAAO1B,cAAC0E,EAAgB,CAAClD,MAAOA,EAAOC,SAAUA,EAAUC,YAAaA,IAC1E,KAAK,EACH,OAAO1B,cAAC4E,EAAe,CAACpD,MAAOA,EAAOC,SAAUA,EAAUC,YAAaA,IACzE,KAAK,EACH,OAAO1B,cAAC8E,EAAe,CAACtD,MAAOA,EAAOC,SAAUA,EAAUC,YAAaA,IACzE,QACE,OAAO,EAEb,CAfI,IAkBV,EC1CeuD,MARf,WACE,OACEjF,cAAA,OAAKC,UAAU,MAAKC,SAClBF,cAACgF,EAAW,KAGlB,ECEeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,SAAA/G,GAAkD,IAA/CgH,EAAMhH,EAANgH,OAAQC,EAAMjH,EAANiH,OAAQC,EAAMlH,EAANkH,OAAQC,EAAMnH,EAANmH,OAAQC,EAAOpH,EAAPoH,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/F,cAACgG,IAAMC,WAAU,CAAA/F,SACfF,cAACiF,EAAG,OAORC,G","file":"static/js/main.2f63f796.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.scss';\n\nfunction PuzzleTile({setIsOpen,moveCount,handleRestartClick, setMoveCount, isStarted ,setIsStarted, data ,images, setImages,dragItem, dragOverItem, dragStart}) {\n    const drop = (e) => {\n     \n      const copyListItems = [...images];\n      const dragItemContent = copyListItems[0][dragItem.current];\n      const initialListItems = [...data[1]];\n      const initialListItem = [...data[0]];\n      {copyListItems[1][dragOverItem.current][\"cls\"] == \"blank\" && copyListItems[0].splice(dragItem.current,1)};\n      {dragOverItem.current == \"0\" && copyListItems[1][dragOverItem.current][\"cls\"] == \"blank\" && \n        copyListItems[1].splice(0,1,dragItemContent) && copyListItems[0].splice(dragItem.current,0,initialListItems[0]) && setMoveCount(moveCount+1) };\n      {dragOverItem.current && copyListItems[1][dragOverItem.current][\"cls\"] == \"blank\" && \n          copyListItems[1].splice(dragOverItem.current,1,dragItemContent) && copyListItems[0].splice(dragItem.current,0,initialListItems[0]) && setMoveCount(moveCount+1)};\n      dragItem.current = null;\n      dragOverItem.current = null;\n      setImages(copyListItems);\n      {console.log(\"hhhhhhhi\")}\n      {(JSON.stringify(copyListItems[1]) === JSON.stringify(initialListItem)) && setIsOpen(true) }\n    };\n\n  return (\n    <div className='tile-main ' >\n           { isStarted? images[0] && images[0].map((image,index) =>(\n            \n            <div className={image.cls} id={image.id} key={index} \n            onDragStart={(e) => dragStart(e, index)\n            }\n            onDragOver={(e)=>e.preventDefault()}\n            onDragEnd={drop}\n            draggable={image.id != 'blank'}>\n            </div>))\n            : images[0] && images[0].map((image,index) => (\n              <div className={image.cls} id={image.id} key={index}>\n              </div>))}       \n    </div>\n    );\n  }\n\nexport default PuzzleTile;","import React from 'react';\nimport '../App.scss';\nimport './PuzzleBoard.scss';\n\nfunction PuzzleEmptyTile({ setIsOpen, moveCount,handleRestartClick,isPlayerWin, setIsPlayerWin,isStarted, setIsStarted, setMoveCount, images,data, setImages,dragItem, dragOverItem, dragStart,dragEnter}) {\n  const drop = (e) => {\n    const copyItems = [...images[1]];\n    const initialListItem = [...data[0]];\n    const dragItemContent = copyItems[dragItem.current];\n    const dragOverItemContent = copyItems[dragOverItem.current]\n    copyItems.splice(dragItem.current,1,dragOverItemContent);\n    copyItems.splice(dragOverItem.current,1,dragItemContent);\n    dragItem.current = null;\n    dragOverItem.current = null;\n    setImages(Object.values({\"0\": images[0], \"1\": copyItems}));\n    setMoveCount(moveCount+1);\n    {(JSON.stringify(copyItems) === JSON.stringify(initialListItem) && setIsOpen(true))}\n  };\n  return (\n    <div className='tile-main'>\n      {isStarted && images[1] && images[1].map((image,index) => (\n            <div className={image.cls} id={image.id} key={index} \n            onDragEnter={(e) => dragEnter(e, index)}\n            onDragOver={(e) => e.preventDefault()}\n            onDragStart={(e) => dragStart(e, index)}\n            onDragEnd={drop}\n            draggable={image.id != 'blank'}>\n            </div>\n           ))\n           }\n    </div>\n  );\n}\n\nexport default PuzzleEmptyTile;","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nfunction AlertDialog({ isOpen, handleRestartClick, setIsOpen, moveCount ,level,setLevel, handleLevel}) {\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <div>\n      {level !== 5 ? <Dialog\n        open={isOpen}\n        onClose={handleRestartClick}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <div className='dialog-main'>\n          <DialogTitle className='content' id=\"alert-dialog-title\">\n            {\"You Win !!\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText className='content' id=\"alert-dialog-description\">\n              You end this puzzle with {moveCount} Moves .\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button className=\"btn\" onClick={handleRestartClick} >\n              Try Again \n            </Button>\n            <Button className=\"btn\" onClick={handleLevel} autoFocus>\n              Next Level\n            </Button>\n          </DialogActions>\n        </div>\n      </Dialog>:\n      <Dialog\n        open={isOpen}\n        onClose={handleRestartClick}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <div className='dialog-main'>\n          <DialogTitle className='content' id=\"alert-dialog-title\">\n            {\"You Cleared all levels . Congratulations !!\"}\n          </DialogTitle>\n          <DialogContent>\n            <DialogContentText className='content' id=\"alert-dialog-description\">\n              You end this puzzle with {moveCount} Moves . \n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button className=\"btn\" onClick={handleRestartClick} >\n              Try Again \n            </Button>\n            <Button className=\"btn\" onClick={()=>setLevel(1)} autoFocus>\n              Home Page\n            </Button>  \n          </DialogActions>\n        </div>\n      </Dialog>\n      } \n    </div>\n  );\n}\n\nexport default AlertDialog;","import React from 'react';\nimport '../App.scss';\nimport './PuzzleBoard.scss';\nimport PuzzleTile from './PuzzleTile';\nimport PuzzleEmptyTile from './PuzzleEmptyTile';\nimport { useState, useRef } from 'react';\nimport {Button, Typography} from '@mui/material';\nimport AlertDialog from './Dialog';\n\nfunction PuzzleOneBoard({level, handleLevel}) {\n\n\n  const data1 = [[{cls:\"tile\", id:\"tile0\"},{cls:\"tile\", id:\"tile1\"},{cls:\"tile\", id:\"tile2\"},{cls:\"tile\", id:\"tile3\"},{cls:\"tile\", id:\"tile4\"},{cls:\"tile\", id:\"tile5\"}],\n  [{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"}]];\n\n  const [images, setImages] = useState(data1);\n  const [isStarted, setIsStarted] = useState(false);\n\n  const handleShuffle = () => {\n    const changes = shuffle([...images[0]]);\n    setImages(Object.values({\"0\":changes, \"1\": images[\"1\"]}));\n  }\n\n  const handleClear = () => {\n    setImages(data1);\n  }\n\n  const handleStartClick = () => {\n    setIsStarted(true);\n    handleShuffle();\n    setMoveCount(0);\n  }\n\n  const handleRestartClick = () => {\n    setIsStarted(false);\n    setIsPlayerWin(false);\n    handleClear();\n    setIsOpen(false);\n  }\n\n  const [moveCount, setMoveCount] = useState(0);\n  const [isPlayerWin, setIsPlayerWin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n      dragItem.current = position;\n      console.log(dragItem.current, \"position\")\n\n  }\n\n  const dragEnter = (e, position) => {\n      dragOverItem.current = position;\n      //  console.log(dragOverItem.current, \"dragover\")\n  }\n\n\n  const shuffle = (arra1) => {\n    var ctr = arra1.length,\n      temp,\n      index;\n    while (ctr > 0) {\n      index = Math.floor(Math.random() * ctr);\n      ctr--;\n      temp = arra1[ctr];\n      arra1[ctr] = arra1[index];\n      arra1[index] = temp;\n    }\n    return arra1;\n  }\n\n//   const props = [\n//     moveCount={moveCount},\n//     setMoveCount={setMoveCount},\n//     dragItem={dragItem},\n//     dragOverItem={dragOverItem},\n//     shuffle={shuffle},\n//     dragStart={dragStart},\n//     dragEnter={dragEnter},\n//     isPlayerWin={isPlayerWin},\n//     setIsPlayerWin={setIsPlayerWin},\n//     setIsOpen={setIsOpen},\n//     isOpen={isOpen},\n//     handleClear={handleClear},\n//     handleShuffle={handleShuffle},\n//     isStarted={isStarted}, \n//     setIsStarted={setIsStarted},\n//     data1={data1},\n//     images={images},\n//     setImages={setImages},\n//     handleRestartClick={handleRestartClick}\n// ];\n\n  return (\n    <>\n      <div className='main-header'>\n              <div className='heading part1'>\n                <Typography id=\"title\" className='headingTitle' variant=\"h4\" gutterBottom>\n                  Picture Puzzle \n                </Typography>\n              </div>   \n              <div className='heading part2'>\n                {!isStarted ? <label>Level - 1</label>:<label>Moves: {moveCount}</label>}\n                {console.log(isOpen , \"outside\")}\n              </div>\n        </div>\n      \n      <div className=\"main-body tile-image-l1\">\n          <div className=\"submain\">\n                <PuzzleTile handleClear={handleClear} handleShuffle={handleShuffle} moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                        data={data1} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                        dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin}\n                        handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          <div className=\"submain\">\n                <PuzzleEmptyTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                          data={data1} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                          dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin} \n                          handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n                {isOpen && <AlertDialog level={level} handleLevel={handleLevel} isOpen={isOpen} setIsOpen={setIsOpen} moveCount={moveCount} handleRestartClick={handleRestartClick}/>}\n      </div>\n      <div className='main-footer'>\n          <div className='btn-div'>\n               {!isStarted ?\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={() => handleStartClick()}>Start</Button>) :\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"error\" onClick={() => handleRestartClick()}>Reset</Button>)}\n                {!isStarted && <Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={handleLevel}>Next</Button>}\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default PuzzleOneBoard;","import React from 'react';\nimport '../App.scss';\nimport './PuzzleBoard.scss';\nimport PuzzleTile from './PuzzleTile';\nimport PuzzleEmptyTile from './PuzzleEmptyTile';\nimport { useState, useRef } from 'react';\nimport {Button, Typography} from '@mui/material';\nimport AlertDialog from './Dialog';\n\nfunction PuzzleTwoBoard({level, setLevel, handleLevel}) {\n    const data2 = [[{cls:\"tile\", id:\"tile0\"},{cls:\"tile\", id:\"tile1\"},{cls:\"tile\", id:\"tile2\"},{cls:\"tile\", id:\"tile3\"},{cls:\"tile\", id:\"tile4\"},{cls:\"tile\", id:\"tile5\"},{cls:\"tile\", id:\"tile6\"},{cls:\"tile\", id:\"tile7\"}],\n  [{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"}]];\n\n  const [images, setImages] = useState(data2);\n  const [isStarted, setIsStarted] = useState(false);\n  \n  const [moveCount, setMoveCount] = useState(0);\n  const [isPlayerWin, setIsPlayerWin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n      dragItem.current = position;\n  }\n\n  const dragEnter = (e, position) => {\n      dragOverItem.current = position;\n  }\n\n  const handleShuffle = () => {\n    const changes = shuffle([...images[0]]);\n    setImages(Object.values({\"0\":changes, \"1\": images[\"1\"]}));\n  }\n\n  const handleClear = () => {\n    setImages(data2);\n  }\n\n  const handleStartClick = () => {\n    setIsStarted(true);\n    handleShuffle();\n    setMoveCount(0);\n  }\n\n  const handleRestartClick = () => {\n    setIsStarted(false);\n    setIsPlayerWin(false);\n    handleClear();\n    setIsOpen(false);\n  }\n\n  const shuffle = (arra1) => {\n    var ctr = arra1.length,\n      temp,\n      index;\n    while (ctr > 0) {\n      index = Math.floor(Math.random() * ctr);\n      ctr--;\n      temp = arra1[ctr];\n      arra1[ctr] = arra1[index];\n      arra1[index] = temp;\n    }\n    return arra1;\n  }\n  return (\n    <>\n      <div className='main-header'>\n              <div className='heading part1'>\n                <Typography id=\"title\" className='headingTitle' variant=\"h4\" gutterBottom>\n                  Picture Puzzle \n                </Typography>\n              </div>   \n              <div className='heading part2'>\n                {!isStarted ? <label>Level - 2</label>:<label>Moves: {moveCount}</label>}\n                {console.log(isOpen , \"outside\")}\n              </div>\n        </div>\n      \n      <div className=\"main-body tile-image-l2\">\n          <div className=\"submain\">\n                <PuzzleTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                        data={data2} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                        dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin}\n                        handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          <div className=\"submain\">\n                <PuzzleEmptyTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                          data={data2} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                          dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin} \n                          handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          {isOpen && <AlertDialog level={level} handleLevel={handleLevel} isOpen={isOpen} setIsOpen={setIsOpen} moveCount={moveCount} handleRestartClick={handleRestartClick} />}\n      </div>\n      <div className='main-footer'>\n      <div className='btn-div'>\n               {!isStarted ?\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={() => handleStartClick()}>Start</Button>) :\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"error\" onClick={() => handleRestartClick()}>Reset</Button>)}\n                {!isStarted && <Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={handleLevel}>Next</Button>}\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default PuzzleTwoBoard;","import React from 'react';\nimport '../App.scss';\nimport './PuzzleBoard.scss';\nimport PuzzleTile from './PuzzleTile';\nimport PuzzleEmptyTile from './PuzzleEmptyTile';\nimport { useState, useRef } from 'react';\nimport {Button, Typography} from '@mui/material';\nimport AlertDialog from './Dialog';\n\nfunction PuzzleThreeBoard({level, handleLevel}) {\n    const data3 = [[{cls:\"tile\", id:\"tile0\"},{cls:\"tile\", id:\"tile1\"},{cls:\"tile\", id:\"tile2\"},{cls:\"tile\", id:\"tile3\"},{cls:\"tile\", id:\"tile4\"},{cls:\"tile\", id:\"tile5\"},{cls:\"tile\", id:\"tile6\"},{cls:\"tile\", id:\"tile7\"},{cls:\"tile\", id:\"tile8\"}],\n  [{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"}]];\n\n  const [images, setImages] = useState(data3);\n  const [isStarted, setIsStarted] = useState(false);\n  const [moveCount, setMoveCount] = useState(0);\n  const [isPlayerWin, setIsPlayerWin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n      dragItem.current = position;\n  }\n\n  const dragEnter = (e, position) => {\n      dragOverItem.current = position;\n  }\n\n  const handleShuffle = () => {\n    const changes = shuffle([...images[0]]);\n    setImages(Object.values({\"0\":changes, \"1\": images[\"1\"]}));\n  }\n\n  const handleClear = () => {\n    setImages(data3);\n  }\n\n  const handleStartClick = () => {\n    setIsStarted(true);\n    handleShuffle();\n    setMoveCount(0);\n  }\n\n  const handleRestartClick = () => {\n    setIsStarted(false);\n    setIsPlayerWin(false);\n    handleClear();\n    setIsOpen(false);\n  }\n\n  const shuffle = (arra1) => {\n    var ctr = arra1.length,\n      temp,\n      index;\n    while (ctr > 0) {\n      index = Math.floor(Math.random() * ctr);\n      ctr--;\n      temp = arra1[ctr];\n      arra1[ctr] = arra1[index];\n      arra1[index] = temp;\n    }\n    return arra1;\n  }\n  return (\n    <>\n      <div className='main-header'>\n              <div className='heading part1'>\n                <Typography id=\"title\" className='headingTitle' variant=\"h4\" gutterBottom>\n                  Picture Puzzle \n                </Typography>\n              </div>   \n              <div className='heading part2'>\n                {!isStarted ? <label>Level - 3</label>:<label>Moves: {moveCount}</label>}\n                {console.log(isOpen , \"outside\")}\n              </div>\n        </div>\n      \n      <div className=\"main-body tile-image-l3\">\n          <div className=\"submain\">\n                <PuzzleTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                        data={data3} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                        dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin}\n                        handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          <div className=\"submain\">\n                <PuzzleEmptyTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                          data={data3} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                          dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin} \n                          handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          {isOpen && <AlertDialog level={level} handleLevel={handleLevel} isOpen={isOpen} setIsOpen={setIsOpen} moveCount={moveCount} handleRestartClick={handleRestartClick} />}\n      </div>\n      <div className='main-footer'>\n          <div className='btn-div'>\n               {!isStarted ?\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={() => handleStartClick()}>Start</Button>) :\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"error\" onClick={() => handleRestartClick()}>Reset</Button>)}\n                {!isStarted && <Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={handleLevel}>Next</Button>}\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default PuzzleThreeBoard;","import React from 'react';\nimport '../App.scss';\nimport PuzzleTile from './PuzzleTile';\nimport PuzzleEmptyTile from './PuzzleEmptyTile';\nimport { useState, useRef } from 'react';\nimport {Button, Typography} from '@mui/material';\nimport AlertDialog from './Dialog';\nimport './PuzzleBoard.scss';\n\nfunction PuzzleFourBoard({level,setLevel,handleLevel}) {\n    const data4 = [[{cls:\"tile\", id:\"tile0\"},{cls:\"tile\", id:\"tile1\"},{cls:\"tile\", id:\"tile2\"},{cls:\"tile\", id:\"tile3\"},{cls:\"tile\", id:\"tile4\"},{cls:\"tile\", id:\"tile5\"},{cls:\"tile\", id:\"tile6\"},{cls:\"tile\", id:\"tile7\"},{cls:\"tile\", id:\"tile8\"},{cls:\"tile\", id:\"tile9\"},{cls:\"tile\", id:\"tile10\"},{cls:\"tile\", id:\"tile11\"},{cls:\"tile\", id:\"tile12\"},{cls:\"tile\", id:\"tile13\"},{cls:\"tile\", id:\"tile14\"},{cls:\"tile\", id:\"tile15\"}],\n  [{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"}]];\n\n  const [images, setImages] = useState(data4);\n  const [isStarted, setIsStarted] = useState(false);\n  const [moveCount, setMoveCount] = useState(0);\n  const [isPlayerWin, setIsPlayerWin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n      dragItem.current = position;\n  }\n\n  const dragEnter = (e, position) => {\n      dragOverItem.current = position;\n  }\n\n  const handleShuffle = () => {\n    const changes = shuffle([...images[0]]);\n    setImages(Object.values({\"0\":changes, \"1\": images[\"1\"]}));\n  }\n\n  const handleClear = () => {\n    setImages(data4);\n  }\n\n  const handleStartClick = () => {\n    setIsStarted(true);\n    handleShuffle();\n    setMoveCount(0);\n  }\n\n  const handleRestartClick = () => {\n    setIsStarted(false);\n    setIsPlayerWin(false);\n    handleClear();\n    setIsOpen(false);\n  }\n\n  const shuffle = (arra1) => {\n    var ctr = arra1.length,\n      temp,\n      index;\n    while (ctr > 0) {\n      index = Math.floor(Math.random() * ctr);\n      ctr--;\n      temp = arra1[ctr];\n      arra1[ctr] = arra1[index];\n      arra1[index] = temp;\n    }\n    return arra1;\n  }\n  return (\n    <>\n      <div className='main-header'>\n              <div className='heading part1'>\n                <Typography id=\"title\" className='headingTitle' variant=\"h4\" gutterBottom>\n                  Picture Puzzle \n                </Typography>\n              </div>   \n              <div className='heading part2'>\n                {!isStarted ? <label>Level - 4</label>:<label>Moves: {moveCount}</label>}\n              </div>\n        </div>\n      \n      <div className=\"main-body tile-image-l4\">\n          <div className=\"submain\">\n                <PuzzleTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                        data={data4} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                        dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin}\n                        handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          <div className=\"submain\">\n                <PuzzleEmptyTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                          data={data4} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                          dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin} \n                          handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          {isOpen && <AlertDialog level={level} handleLevel={handleLevel} isOpen={isOpen} setIsOpen={setIsOpen} moveCount={moveCount} handleRestartClick={handleRestartClick} />}\n      </div>\n      <div className='main-footer'>\n          <div className='btn-div'>\n               {!isStarted ?\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={() => handleStartClick()}>Start</Button>) :\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"error\" onClick={() => handleRestartClick()}>Reset</Button>)}\n                {!isStarted && <Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={handleLevel}>Next</Button>}\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default PuzzleFourBoard;","import React from 'react';\nimport '../App.scss';\nimport PuzzleTile from './PuzzleTile';\nimport PuzzleEmptyTile from './PuzzleEmptyTile';\nimport { useState, useRef } from 'react';\nimport {Button, Typography} from '@mui/material';\nimport AlertDialog from './Dialog';\nimport './PuzzleBoard.scss';\n\nfunction PuzzleFiveBoard({level,setLevel,handleLevel}) {\n    const data5 = [[{cls:\"tile\", id:\"tile0\"},{cls:\"tile\", id:\"tile1\"},{cls:\"tile\", id:\"tile2\"},{cls:\"tile\", id:\"tile3\"},{cls:\"tile\", id:\"tile4\"},\n                    {cls:\"tile\", id:\"tile5\"},{cls:\"tile\", id:\"tile6\"},{cls:\"tile\", id:\"tile7\"},{cls:\"tile\", id:\"tile8\"},{cls:\"tile\", id:\"tile9\"},\n                    {cls:\"tile\", id:\"tile10\"},{cls:\"tile\", id:\"tile11\"},{cls:\"tile\", id:\"tile12\"},{cls:\"tile\", id:\"tile13\"},{cls:\"tile\", id:\"tile14\"},\n                    {cls:\"tile\", id:\"tile15\"},{cls:\"tile\", id:\"tile16\"},{cls:\"tile\", id:\"tile17\"},{cls:\"tile\", id:\"tile18\"},{cls:\"tile\", id:\"tile19\"},\n                    {cls:\"tile\", id:\"tile20\"},{cls:\"tile\", id:\"tile21\"},{cls:\"tile\", id:\"tile22\"},{cls:\"tile\", id:\"tile23\"},{cls:\"tile\", id:\"tile24\"}],\n                   [{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},\n                    {cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},\n                    {cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},\n                    {cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},\n                    {cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"},{cls:\"blank\", id:\"blank\"}]];\n\n  const [images, setImages] = useState(data5);\n  const [isStarted, setIsStarted] = useState(false);\n  const [moveCount, setMoveCount] = useState(0);\n  const [isPlayerWin, setIsPlayerWin] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const dragItem = useRef();\n  const dragOverItem = useRef();\n\n  const dragStart = (e, position) => {\n      dragItem.current = position;\n  }\n\n  const dragEnter = (e, position) => {\n      dragOverItem.current = position;\n  }\n\n  const handleShuffle = () => {\n    const changes = shuffle([...images[0]]);\n    setImages(Object.values({\"0\":changes, \"1\": images[\"1\"]}));\n  }\n\n  const handleClear = () => {\n    setImages(data5);\n  }\n\n  const handleStartClick = () => {\n    setIsStarted(true);\n    handleShuffle();\n    setMoveCount(0);\n  }\n\n  const handleRestartClick = () => {\n    setIsStarted(false);\n    setIsPlayerWin(false);\n    handleClear();\n    setIsOpen(false);\n  }\n\n  const shuffle = (arra1) => {\n    var ctr = arra1.length,\n      temp,\n      index;\n    while (ctr > 0) {\n      index = Math.floor(Math.random() * ctr);\n      ctr--;\n      temp = arra1[ctr];\n      arra1[ctr] = arra1[index];\n      arra1[index] = temp;\n    }\n    return arra1;\n  }\n  return (\n    <>\n      <div className='main-header'>\n              <div className='heading part1'>\n                <Typography id=\"title\" className='headingTitle' variant=\"h4\" gutterBottom>\n                  Picture Puzzle \n                </Typography>\n              </div>   \n              <div className='heading part2'>\n                {!isStarted ? <label>Level - 5</label>:<label>Moves: {moveCount}</label>}\n              </div>\n        </div>\n      \n      <div className=\"main-body tile-image-l5\">\n          <div className=\"submain\">\n                <PuzzleTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                        data={data5} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                        dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin}\n                        handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          <div className=\"submain\">\n                <PuzzleEmptyTile moveCount={moveCount} setMoveCount={setMoveCount} isStarted={isStarted} setIsStarted={setIsStarted} \n                          data={data5} images={images} setImages={setImages} dragItem={dragItem} dragOverItem={dragOverItem} \n                          dragStart={dragStart} dragEnter={dragEnter} isPlayerWin={isPlayerWin} setIsPlayerWin={setIsPlayerWin} \n                          handleRestartClick={handleRestartClick} isOpen={isOpen} setIsOpen={setIsOpen}/>\n          </div>\n          {isOpen && <AlertDialog level={level} setLevel={setLevel} handleRestartClick={handleRestartClick} handleLevel={handleLevel} isOpen={isOpen} setIsOpen={setIsOpen} moveCount={moveCount} />}\n      </div>\n      <div className='main-footer'>\n          <div className='btn-div'>\n               {!isStarted ?\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={() => handleStartClick()}>Start</Button>) :\n                (<Button id=\"btn\" className='btn-start' size='large' color=\"error\" onClick={() => handleRestartClick()}>Reset</Button>)}\n                {!isStarted && <Button id=\"btn\" className='btn-start' size='large' color=\"success\" onClick={()=>setLevel(1)}>Home</Button>}\n          </div>\n      </div>\n    </>\n  )\n}\n\nexport default PuzzleFiveBoard;","import React from 'react';\nimport {Button, Typography} from '@mui/material';\nimport { useState, useRef } from 'react';\nimport PuzzleOneBoard from './PuzzleOneBoard';\nimport PuzzleTwoBoard from './PuzzleTwoBoard';\nimport PuzzleThreeBoard from './PuzzleThreeBoard';\nimport PuzzleFourBoard from './PuzzleFourBoard';\nimport PuzzleFiveBoard from './PuzzleFiveBoard';\n\n\n\nfunction PuzzleBoard() {\n\n    const [level , setLevel] = useState(1);\n\n    const handleLevel =() => {\n      setLevel(level + 1);\n    }\n    \n  \n  // const props = {\n  //   moveCount:{moveCount},\n  //   setMoveCount:{setMoveCount},\n  //   dragItem:{dragItem},\n  //   dragOverItem:{dragOverItem},\n  //   shuffle:{shuffle},\n  //   dragStart:{dragStart},\n  //   dragEnter:{dragEnter},\n  //   isPlayerWin:{isPlayerWin},\n  //   setIsPlayerWin:{setIsPlayerWin},\n  //   setIsOpen:{setIsOpen},\n  //   isOpen:{isOpen} \n  // };\n\n  return (\n      <div className='board-body'>\n        {(() => {\n        switch (level) {\n          case 1:\n            return <PuzzleOneBoard level={level} setLevel={setLevel} handleLevel={handleLevel}/> ;\n          case 2:\n            return <PuzzleTwoBoard level={level} setLevel={setLevel} handleLevel={handleLevel}/> ;\n          case 3:\n            return <PuzzleThreeBoard level={level} setLevel={setLevel} handleLevel={handleLevel}/> ;\n          case 4:\n            return <PuzzleFourBoard level={level} setLevel={setLevel} handleLevel={handleLevel}/> ;\n          case 5:\n            return <PuzzleFiveBoard level={level} setLevel={setLevel} handleLevel={handleLevel}/> ;\n          default:\n            return 1;\n        }\n      })()}\n      </div>\n  )\n}\n\nexport default PuzzleBoard;","import './App.scss';\nimport PuzzleBoard from './components/PuzzleBoard';\nimport React, { Component }  from 'react';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PuzzleBoard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}